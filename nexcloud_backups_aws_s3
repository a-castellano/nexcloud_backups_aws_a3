#!/bin/bash
#
# ** nextcloud_backups_aws_s3 **
# Utility to make backups of Nextcloud and store them in an S3 bucket
#
# Álvaro Castellano Vela - https://github.com/a-castellano

# Option variables
ENABLE_LOG=false # by default this script write logs via syslog

# Default values
NEXTCLOUD_PATH='/var/www/nextcloud'
NEXTCLOUD_USERS='ALL'

# Nextcloud variables
NEXTCLOUD_CONFIG_SUBDIR='/config/config.php'

# Log variables
LOGGET_TAG="nextcloud_backups_aws_s3"
LOGGER="$(which logger) -t $LOGGET_TAG"

# Misc
WHICH=$(which which)
ECHO=$($WHICH echo)
TR=$($WHICH tr)
RM=$($WHICH rm)
SED=$($WHICH sed)
CAT=$($WHICH cat)
PRINTF=$($WHICH printf)

# Functions
function trim {
    $ECHO $1 | $SED 's/^-*//'
}

function report_error {
    error_message="Error: $@"
    stderr=""
    if [[ -z "$SILENT" || "$SILENT" = false ]]; then
       stderr="--stderr"
    fi
    $LOGGER $stderr $error_message
}

function check_option_called {
    option_called="_OPTION_CALLED"
    option_name=$1
    variable_name=$($ECHO $option_name | $TR '[:lower:]' '[:upper:]' | $TR '-' '_')
    variable_called_name="$variable_name$option_called"
    if [[ -z ${!variable_called_name} || "${!variable_called_name}" = false  ]]; then
        if [ "$#" -eq 1 ]; then
            eval $variable_name=true
        fi
        if [ "$#" -eq 2 ]; then
            eval $variable_name=$2
            if [ -z "$variable_name" ]; then
                error_msg="$variable_name was supposed to be set. Can't parse '$2'."
                report_error $error_msg
                exit 1
            fi
        fi
        eval $variable_called_name=true
    else
        error_msg="It is not allowed to set $option_name options more than two times."
        report_error $error_msg
        exit 1
    fi
}

function get_option_from_short_options_hash {
    arg=$(trim $1)
    result=${short_options_hash[$arg]}
    check_option_called $result
}

# Options
declare -A short_options_hash=(
    ["v"]="verbose"
    ["s"]="silent"
    ["u"]="usage"
)
short_options=$( $ECHO "${!short_options_hash[@]}" | $SED 's/ //g' )
short_options_OR=$( $ECHO "${!short_options_hash[@]}" | $SED 's/\([^ ]\)/-\1 |/g' | $SED 's/|$//g' )

of_short=$(for KEY in "${!short_options_hash[@]}"; do $PRINTF "${short_options_hash[$KEY]},"; done )
of_short_OR=$(for KEY in "${!short_options_hash[@]}"; do $PRINTF "--${short_options_hash[$KEY]} | "; done | $SED 's/| $//g' )

declare -a long_options_with_no_params_array
long_options_with_no_params_array=(
    'exclude-database'
    'dry-run'
)
no_params=$( $ECHO ${long_options_with_no_params_array[@]} | $SED 's/ /,/g' | $SED 's/$/,/g' )
no_params_OR=$( $ECHO ${long_options_with_no_params_array[@]} | $SED 's/\([^ ]*\)/--\1 |/g' | $SED 's/|$//g' )

declare -a long_options_with_one_param_array
long_options_with_one_params_array=(
    's3-access-key'
    's3-secret-key'
    'database-name'
    'database-user'
    'database-passwd'
    'database-host'
    'database-port'
    'nextcloud-path'
    'nextcloud-users'
    'test'
)
one_param=$( $ECHO ${long_options_with_one_params_array[@]} | $SED 's/ /:,/g' | $SED 's/$/:,/g' )
one_param_OR=$( $ECHO ${long_options_with_one_params_array[@]} | $SED 's/\([^ ]*\)/--\1 |/g' | $SED 's/|$//g' )

OPTS=`getopt -o $short_options --long $no_params$of_short$one_param -n 'parse-options' -- "$@" 2> .error.log `

if [ $? -ne 0 ]; then
    error_msg=$($CAT .error.log)
    report_error $error_msg
    exit 1
fi
$RM .error.log

eval set -- "$OPTS"

while true; do
  eval "
  case \"$1\" in
    $short_options_OR )
            get_option_from_short_options_hash $1
            shift ;;
    $of_short_OR )
            check_option_called $( trim $1 )
            shift ;;
    $no_params_OR )
            check_option_called $( trim $1 )
            shift ;;
    $one_param_OR )
            check_option_called $( trim $1 ) $2
            shift ; shift;;
    -- ) shift; break ;;
    * ) break ;;
  esac"
done

echo VERBOSE=$VERBOSE
echo USAGE=$USAGE
echo DRY_RUN=$DRY_RUN
echo S3_ACCESS_KEY=$S3_ACCESS_KEY
echo S3_SECRET_KEY=$S3_SECRET_KEY
echo DATABASE_PORT=$DATABASE_PORT
echo NEXTCLOUD_PATH=$NEXTCLOUD_PATH
echo EXCLUDE_DATABASE=$EXCLUDE_DATABASE
exit 0
