#!/usr/bin/env bash
# file: tests/05-checkrequiredsoftware

source lib/08-required_software.sh
source lib/99-clean_variables.sh

oneTimeSetUp() {
    export NEXTCLOUD_PATH="$(pwd)/tests/config_folders/config_test"
    export CONFIG_FILE="$(pwd)/tests/config_folders/config/nextcloud_backups_aws_s3"
    export S3_ACCESS_KEY="access-key"
    export S3_SECRET_KEY="secretkey"
    export S3_BUCKET="my-bucket"
    export TMP_FOLDER="/var/tmp/nextcloud_backups_aws_s3/tests"
    mkdir -p $TMP_FOLDER
}

setUp()
{
    originalPath=$PATH
    export PATH=$(pwd)/tests/stubs:$PATH
}

tearDown()
{
    export PATH=$originalPath
    rm -rf $TMP_FOLDER/*
    cleanVariables
}

testNoMysqlClientInstalled()
{
    cat << EOF > $TMP_FOLDER/nomysqlclientinstalled
Error: MySQL client is not installed, please install it before start backup jobs.
EOF
    mv tests/stubs/mysql tests/stubs/_mysql
    which mysql > /dev/null
    if [ $? -eq 1  ]; then
        output=$(check_required_software 2> $TMP_FOLDER/error)
        sed  's/^.*nextcloud_backups_aws_s3: //' -i $TMP_FOLDER/error
        diff $TMP_FOLDER/nomysqlclientinstalled $TMP_FOLDER/error
        returnCode=$?
    else
        startSkipping
    fi
    assertEquals "$returnCode" "0"
    mv tests/stubs/_mysql tests/stubs/mysql
}

testNoMydumperInstalled()
{
    cat << EOF > $TMP_FOLDER/nomydumperinstalled
Error: mydumper is not installed, please install it before start backup jobs.
EOF
    mv tests/stubs/mydumper tests/stubs/_mydumper
    which mydumper > /dev/null
    if [ $? -eq 1 ]; then
        output=$(check_required_software 2> $TMP_FOLDER/error)
        sed  's/^.*nextcloud_backups_aws_s3: //' -i $TMP_FOLDER/error
        diff $TMP_FOLDER/nomydumperinstalled $TMP_FOLDER/error
        returnCode=$?
        assertEquals "$returnCode" "0"
    else
        startSkipping
    fi
    mv tests/stubs/_mydumper tests/stubs/mydumper
}

testNoS3cmdInstalled()
{
    cat << EOF > $TMP_FOLDER/nos3cmdinstalled
Error: s3cmd is not installed, please install it before start backup jobs.
EOF
    mv tests/stubs/s3cmd tests/stubs/_s3cmd
    which s3cmd > /dev/null
    if [ $? -eq 1 ]; then
        output=$(check_required_software 2> $TMP_FOLDER/error)
        sed  's/^.*nextcloud_backups_aws_s3: //' -i $TMP_FOLDER/error
        diff $TMP_FOLDER/nos3cmdinstalled $TMP_FOLDER/error
        returnCode=$?
        assertEquals "$returnCode" "0"
    else
        startSkipping
    fi
    mv tests/stubs/_s3cmd tests/stubs/s3cmd
}

# Load shUnit2.
. /usr/bin/shunit2
