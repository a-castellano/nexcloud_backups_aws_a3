##!/bin/sh
# file: tests/01-variables

testVerboseNotDefined() {
    undefined=$(./nexcloud_backups_aws_s3 --test='verbose')
    assertEquals "$undefined" "VERBOSE is not defined"
}

testVerboseIsDefined() {
    defined=$(./nexcloud_backups_aws_s3 --test='verbose' -v)
    assertEquals "$defined" "VERBOSE -> true"
}

testUsageNotDefined() {
    undefined=$(./nexcloud_backups_aws_s3 --test='usage')
    assertEquals "$undefined" "USAGE is not defined"
}

testUsageIsDefined() {
    defined=$(./nexcloud_backups_aws_s3 --usage --test='usage')
    assertEquals "$defined" "USAGE -> true"
}

testSilentNotDefined() {
    undefined=$(./nexcloud_backups_aws_s3 --test='silent')
    assertEquals "$undefined" "SILENT is not defined"
}

testSilentIsDefined() {
    defined=$(./nexcloud_backups_aws_s3 -s --test='silent')
    assertEquals "$defined" "SILENT -> true"
}

testS3AccessNotDefined() {
    undefined=$(./nexcloud_backups_aws_s3 --test='s3-access-key')
    assertEquals "$undefined" "S3_ACCESS_KEY is not defined"
}

testS3AccessIsDefined() {
    defined=$(./nexcloud_backups_aws_s3 --s3-access-key="my-access" --test='s3-access-key')
    assertEquals "$defined" "S3_ACCESS_KEY -> my-access"
}

testS3SecretNotDefined() {
    undefined=$(./nexcloud_backups_aws_s3 --test='s3-secret-key')
    assertEquals "$undefined" "S3_SECRET_KEY is not defined"
}

testS3SecretIsDefined() {
    defined=$(./nexcloud_backups_aws_s3 --s3-secret-key "my-secret" --test='s3-secret-key')
    assertEquals "$defined" "S3_SECRET_KEY -> my-secret"
}

testDatabaseNameNotDefined() {
    undefined=$(./nexcloud_backups_aws_s3 --test='database-name')
    assertEquals "$undefined" "DATABASE_NAME is not defined"
}

testDatabaseNameIsDefined() {
    defined=$(./nexcloud_backups_aws_s3 --database-name "mynextclouddatabase" --test='database-name')
    assertEquals "$defined" "DATABASE_NAME -> mynextclouddatabase"
}

testDatabaseUserNotDefined() {
    undefined=$(./nexcloud_backups_aws_s3 --test='database-user')
    assertEquals "$undefined" "DATABASE_USER is not defined"
}

testDatabaseUserIsDefined() {
    defined=$(./nexcloud_backups_aws_s3 --database-user="user" --test='database-user')
    assertEquals "$defined" "DATABASE_USER -> user"
}

testDatabasePasswordNotDefined() {
    undefined=$(./nexcloud_backups_aws_s3 --test='database-passwd')
    assertEquals "$undefined" "DATABASE_PASSWD is not defined"
}

testDatabasePasswordIsDefined() {
    defined=$(./nexcloud_backups_aws_s3 --database-passwd="secrepasswd" --test='database-passwd')
    assertEquals "$defined" "DATABASE_PASSWD -> secrepasswd"
}

testDatabaseHostNotDefined() {
    undefined=$(./nexcloud_backups_aws_s3 --test='database-host')
    assertEquals "$undefined" "DATABASE_HOST is not defined"
}

testDatabaseHostIsDefined() {
    defined=$(./nexcloud_backups_aws_s3 --database-host="LOLcalhost" --test='database-host')
    assertEquals "$defined" "DATABASE_HOST -> LOLcalhost"
}

testDatabasePortNotDefined() {
    undefined=$(./nexcloud_backups_aws_s3 --test='database-port')
    assertEquals "$undefined" "DATABASE_PORT is not defined"
}

testTestIsDefined() {
    defined=$(./nexcloud_backups_aws_s3  --test='test')
    assertEquals "$defined" "TEST -> test"
}

testDatabasePortIsDefined() {
    defined=$(./nexcloud_backups_aws_s3 --database-port 3307 --test='database-port')
    assertEquals "$defined" "DATABASE_PORT -> 3307"
}

testDefaultNextcloudPath() {
    nextcloud_path=$(./nexcloud_backups_aws_s3 --test='nextcloud-path')
    assertEquals "$nextcloud_path" "NEXTCLOUD_PATH -> /var/www/nextcloud"
}

testChangueNextcloudPath() {
    nextcloud_path=$(./nexcloud_backups_aws_s3 --nextcloud-path='/home/user/test' --test='nextcloud-path')
    assertEquals "$nextcloud_path" "NEXTCLOUD_PATH -> /home/user/test"
}

testDefaultNextcloudUsers() {
    users=$(./nexcloud_backups_aws_s3 --test='nextcloud-users')
    assertEquals "$users" "NEXTCLOUD_USERS -> ALL"
}

testChangeNextcloudUsers() {
    users=$(./nexcloud_backups_aws_s3 --nextcloud-users="me,bob" --test='nextcloud-users')
    assertEquals "$users" "NEXTCLOUD_USERS -> me,bob"
}

testUndefinedValue() {
    undefined_variable=$(./nexcloud_backups_aws_s3 --test='undefined-variable')
    assertEquals "$undefined_variable" "UNDEFINED_VARIABLE is not defined"
}

testWithSpaces() {
    # So far if there are spaces inside test values this scripts returns None
    test=$(./nexcloud_backups_aws_s3 --test='undefined-variable, space')
    assertEquals "$test" ""
}

testMultipleValues() {
   cat << EOF > /tmp/testMultipleValues
S3_ACCESS_KEY -> ACCESS_KEY
S3_SECRET_KEY -> SECRET_KEY
EOF
    ./nexcloud_backups_aws_s3 --s3-access-key ACCESS_KEY --s3-secret-key SECRET_KEY --test='s3-access-key,s3-secret-key' > /tmp/testMultipleValuesResult
    diff /tmp/testMultipleValues /tmp/testMultipleValuesResult
    match=$?
    assertEquals $match 0
    rm /tmp/testMultipleValues /tmp/testMultipleValuesResult
}

testMultipleValues2() {
   cat << EOF > /tmp/testMultipleValues
S3_ACCESS_KEY -> ACCESS_KEY
S3_SECRET_KEY -> SECRET_KEY
NEXTCLOUD_USERS -> ALL
EOF
    ./nexcloud_backups_aws_s3 --s3-access-key ACCESS_KEY --s3-secret-key SECRET_KEY --test='s3-access-key,s3-secret-key,nextcloud-users' > /tmp/testMultipleValuesResult
    diff /tmp/testMultipleValues /tmp/testMultipleValuesResult
    match=$?
    assertEquals $match 0
    rm /tmp/testMultipleValues /tmp/testMultipleValuesResult
}


# Load shUnit2.
. /usr/bin/shunit2
